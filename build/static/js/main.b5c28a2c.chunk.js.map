{"version":3,"sources":["context/TaskContext.jsx","components/TaskList.jsx","components/Task.jsx","pages/home.jsx","images/fundo.png","styles/container.js","components/MyApp.js","context/Provider.jsx","index.js"],"names":["TaskContext","createContext","TaskList","useContext","tasks","removeTask","toggleComplete","taskEditing","setTaskEditing","editingText","setEditingText","editTask","handleOrder","togglePendente","useState","edited","setEdited","className","ListItemButton","component","onClick","ListItemText","title","primary","map","task","ListItemIcon","AddTask","id","autoFocus","type","label","value","onChange","event","currentTarget","description","dateOfCreated","completed","pendente","Stack","direction","spacing","IconButton","variant","color","sx","ml","Task","addTask","handleSubmit","field","setField","onSubmit","Box","mr","my","TextField","maxLength","Home","Container","mt","borderRadius","bgcolor","opacity","boxShadow","display","gridTemplateColumns","gap","gridTemplateRows","gridTemplateAreas","gridArea","textAlign","borderColor","mb","styles","backgroundImage","BgImage","backgroundRepeat","p","minWidth","theme","ColorModeContext","React","toggleColorMode","MyApp","useTheme","colorMode","flexDirection","height","width","alignItems","justifyContent","fontSize","palette","mode","ToggleColorMode","setMode","useMemo","prevMode","createTheme","Provider","ThemeProvider","TaskProvider","children","setTask","fieldPriority","setFieldPriority","order","setOrder","colOrder","setColOrder","useEffect","loadedTasks","JSON","parse","localStorage","getItem","tasksToSave","setItem","stringify","Dia","Date","getDay","Mês","getMonth","Ano","getFullYear","Hora","getHours","Minutos","getMinutes","Segundos","getSeconds","trim","console","log","newTask","getTime","status","newTasks","filter","updateTasks","preventDefault","fieldName","orderTasks","sort","a","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5c28a2c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst TaskContext = createContext();\n\nexport default TaskContext;\n","import React, { useContext, useState } from 'react';\n// Biblioteca Material UI\nimport { ListItemButton, Stack, TextField } from '@material-ui/core';\nimport IconButton from '@mui/material/IconButton/';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ListItemIcon, ListItemText } from '@mui/material';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport CircleIcon from '@mui/icons-material/Circle';\nimport Pending from '@mui/icons-material/Pending';\nimport { AddTask } from '@mui/icons-material';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport UpdateIcon from '@mui/icons-material/Update';\nimport SortByAlphaIcon from '@mui/icons-material/SortByAlpha';\nimport SortIcon from '@mui/icons-material/Sort';\n// import AccessTimeFilledIcon from '@mui/icons-material/AccessTimeFilled';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\n// Context\nimport TaskContext from '../context/TaskContext.jsx';\n\nfunction TaskList() {\n  const {\n    tasks,\n    removeTask,\n    toggleComplete,\n    taskEditing,\n    setTaskEditing,\n    editingText,\n    setEditingText,\n    editTask,\n    handleOrder,\n    togglePendente,\n  } = useContext(TaskContext);\n\n  const [edited, setEdited] = useState(false);\n  // const [status, setStatus] = useState('');\n\n  return (\n    <main>\n      <section className='card-task'>\n        <ListItemButton\n          component='a'\n          onClick={() => handleOrder('description')}\n        >\n          <SortByAlphaIcon />\n          <ListItemText title='Clique Para Ordenar' primary='Descrição' />\n        </ListItemButton>\n        <ListItemButton component='a' onClick={() => handleOrder('time')}>\n          <AccessTimeIcon />\n          <ListItemText title='Clique Para Ordenar' primary='Data de Criação' />\n        </ListItemButton>\n        <ListItemButton component='a' onClick={() => handleOrder('completed')}>\n          <SortIcon />\n          <ListItemText title='Clique Para Ordenar' primary='Status' />\n        </ListItemButton>\n        <ListItemText primary='Botões de Ação' />\n      </section>\n      {tasks.map((task) => {\n        return (\n          <section key={task.id} className='card-task'>\n            <ListItemIcon>\n              <AddTask />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                taskEditing === task.id ? (\n                  <TextField\n                    id={task.id}\n                    autoFocus\n                    type='text'\n                    label='Digite a nova tarefa'\n                    value={editingText}\n                    onChange={(event) =>\n                      setEditingText(event.currentTarget.value)\n                    }\n                  />\n                ) : (\n                  <ListItemText\n                    title={`Descrição da Tarefa: ${task.description},\nData de Criação: ${task.dateOfCreated},\nId: ${task.id}`}\n                    primary={task.description}\n                  />\n                )\n              }\n            />\n            <ListItemText\n              title='Data de Criação'\n              primary={task.dateOfCreated}\n            />\n            {/* <ListItemText id={task.id} primary={status} /> */}\n            {task.completed ? (\n              <ListItemText title='Status da Tarefa' primary='Completa' />\n            ) : (\n              <ListItemText title='Status da Tarefa' primary='Em Andamento' />\n            )}\n            {task.pendente ? null : (\n              <ListItemText title='Status da Tarefa' primary='Pendente' />\n            )}\n            <div className='actions'>\n              <Stack direction='row' spacing={1}>\n                <IconButton\n                  title='Excluir Tarefa'\n                  aria-label='delete'\n                  variant='outlined'\n                  color='error'\n                  sx={{ ml: 1 }}\n                  onClick={() => removeTask(task.id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Stack>\n              <IconButton\n                id={task.id}\n                title={\n                  task.completed\n                    ? 'Marque como Em andamento'\n                    : 'Marque como Completa'\n                }\n                onClick={() => {\n                  toggleComplete(task.id);\n                  // setStatus(task.completed ? 'Concluída' : 'Em Andamento');\n                }}\n                type='button'\n              >\n                {task.completed ? <CheckCircleOutlineIcon /> : <CircleIcon />}\n              </IconButton>\n              <IconButton\n                id={task.id}\n                title={task.pendente ? 'Marque como pendente' : 'Desmarque'}\n                onClick={() => {\n                  togglePendente(task.id);\n                  // setStatus(task.pendente ? 'Pendente' : 'Em Andamento');\n                }}\n                type='button'\n              >\n                {task.pendente ? <CircleIcon /> : <Pending />}\n              </IconButton>\n              {edited === false ? (\n                <IconButton\n                  id={task.id}\n                  type='button'\n                  onClick={() => {\n                    setTaskEditing(task.id);\n                    setEdited(true);\n                  }}\n                >\n                  <ListAltIcon />\n                </IconButton>\n              ) : (\n                <IconButton\n                  id={task.id}\n                  type='submit'\n                  onClick={() => {\n                    editTask(task.id);\n                    setEdited(false);\n                  }}\n                >\n                  <UpdateIcon />\n                </IconButton>\n              )}\n            </div>\n          </section>\n        );\n      })}\n    </main>\n  );\n}\n\nexport default TaskList;\n","import React, { useContext } from 'react';\n// Biblioteca Material UI\nimport { Box, TextField } from '@mui/material';\nimport { AddTask } from '@mui/icons-material';\nimport IconButton from '@material-ui/core/Button';\n// Component\nimport TaskList from './TaskList.jsx';\n// Context\nimport TaskContext from '../context/TaskContext.jsx';\n\nfunction Task() {\n  const { tasks, addTask, handleSubmit, field, setField } =\n    useContext(TaskContext);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <section className='task'>\n        <Box direction='row' spacing={1}>\n          <AddTask sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\n          <TextField\n            id='input-with-sx'\n            label='Clique e digite sua tarefa'\n            value={field || ''}\n            variant='standard'\n            className='task-field'\n            maxLength='130'\n            onChange={(event) => {\n              setField(event.currentTarget.value);\n            }}\n          />\n          <IconButton\n            title='Adicione uma tarefa'\n            variant='contained'\n            color='primary'\n            className='button-add-task'\n            type='submit'\n            onClick={() => {\n              setField('');\n              addTask(field);\n            }}\n          >\n            <AddTask />\n          </IconButton>\n        </Box>\n      </section>\n      {tasks ? <TaskList /> : []}\n    </form>\n  );\n}\n\nexport default Task;\n","import React from 'react';\n// Código extraído da lib Material UI - Com algumas adequações feitas\nimport Box from '@mui/material/Box';\nimport { Container } from '@mui/material';\nimport Task from '../components/Task.jsx';\n\nfunction Home() {\n  return (\n    <Box>\n      <Container\n        sx={{\n          mt: 5,\n          borderRadius: 5,\n          bgcolor: 'background.default',\n          color: 'text.primary',\n          opacity: 0.9,\n          boxShadow: 2,\n          // height: (theme) => theme.spacing(102),\n        }}\n      >\n        <Box\n          sx={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(4, 2fr)',\n            gap: 1,\n            gridTemplateRows: 'auto',\n            gridTemplateAreas: `\"header header header header\"\n            \"main main main main\"\n            \"footer footer footer footer\"`,\n          }}\n        >\n          <Box\n            sx={{\n              gridArea: 'header',\n              // height: (theme) => theme.spacing(5),\n              textAlign: 'center',\n              gap: 1,\n            }}\n          >\n            <h1>Lista de Tarefas a fazer</h1>\n          </Box>\n          <Box\n            sx={{\n              gridArea: 'main',\n              borderColor: 'red',\n              boxShadow: 6,\n              gap: 4,\n              borderRadius: 5,\n              // height: (theme) => theme.spacing(90),\n            }}\n          >\n            <Task />\n          </Box>\n          {/* <Box\n            sx={{\n              gridArea: 'sidebar',\n              boxShadow: 6,\n              gap: 4,\n              borderRadius: 5,\n            }}\n          >\n            Sidebar\n          </Box> */}\n          <Box\n            sx={{\n              gridArea: 'footer',\n              mb: 1,\n              // height: (theme) => theme.spacing(5),\n            }}\n          >\n            <h4>Desafio proposto pela Trybe | Desenvolvivo por Carlos</h4>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/fundo.1c0c492e.png\";","import BgImage from '../images/fundo.png';\n\nconst styles = {\n    boxShadow: 10,\n    backgroundImage: `url(${BgImage})`,\n    backgroundRepeat: 'no-repeat',\n    color: 'text.primary',\n    p: 2,\n    gap: 2,\n    // height: (theme) => theme.spacing(120),\n    minWidth: (theme) => theme.spacing(100),\n    borderRadius: '1%'\n}\n\nexport default styles;","// Código extraído da lib Material UI - Tema Dark-mode\nimport React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Box from '@mui/material/Box';\nimport { useTheme, ThemeProvider, createTheme } from '@mui/material/styles';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport { Container } from '@mui/material';\n// Component\nimport Home from '../pages/home';\n// Meu Estilo\nimport '../App.css';\nimport styles from '../styles/container'\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => {} });\n\nfunction MyApp() {\n  const theme = useTheme();\n  const colorMode = React.useContext(ColorModeContext);\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100vh',\n        width: '100vw',\n        alignItems: 'center',\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        borderRadius: 1,\n        p: 0,\n      }}\n    >\n      <Container sx={{\n        justifyContent: 'flex-end',\n        gap: 1,\n      }}>\n        <IconButton sx={{ fontSize: 10 }}onClick={colorMode.toggleColorMode} color=\"inherit\">\n          {theme.palette.mode} mode\n          {theme.palette.mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n        </IconButton>\n      </Container>\n      <Container sx={styles}>\n        <Home />\n      </Container>\n    </Box>\n  );\n}\n\nexport default function ToggleColorMode() {\n  const [mode, setMode] = React.useState('light');\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n        },\n      }),\n    [mode],\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <MyApp />\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// ContextAPI\nimport TaskContext from './TaskContext.jsx';\n\nfunction TaskProvider({ children }) {\n  const [tasks, setTask] = useState();\n  const [taskEditing, setTaskEditing] = useState(null);\n  const [editingText, setEditingText] = useState('');\n  const [field, setField] = useState('');\n  const [fieldPriority, setFieldPriority] = useState('');\n  const [order, setOrder] = useState(1);\n  const [colOrder, setColOrder] = useState('description');\n\n  const saveTask = (tasksToSave) => {\n    localStorage.setItem('tasks', JSON.stringify(tasksToSave));\n  };\n\n  const loadTasks = () => {\n    const loadedTasks = JSON.parse(localStorage.getItem('tasks'));\n\n    return loadedTasks;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  const handleOrder = (fieldName) => {\n    setOrder(-order);\n    setColOrder(fieldName);\n\n    const orderTasks = tasks.sort((a, b) =>\n      a[colOrder] < b[colOrder] ? -order : order,\n    );\n\n    setTask(orderTasks);\n  };\n\n  const addTask = (task) => {\n    const Dia = new Date().getDay();\n    const Mês = new Date().getMonth();\n    const Ano = new Date().getFullYear();\n    const Hora = new Date().getHours();\n    const Minutos = new Date().getMinutes();\n    const Segundos = new Date().getSeconds();\n\n    if (field.trim() === '') {\n      const message =\n        'Não foi possível adicionar a tarefa. Tente não deixar campos em branco!';\n      // eslint-disable-next-line no-console\n      console.log(message);\n    } else {\n      const newTask = {\n        id: new Date().getTime(),\n        description: task,\n        dateOfCreated: `${Dia}/${Mês}/${Ano} à ${Hora}:${Minutos}:${Segundos}`,\n        completed: false,\n        status: 'Pendente',\n      };\n\n      const newTasks = [...(tasks || []), newTask];\n\n      setTask(newTasks);\n    }\n  };\n\n  const removeTask = (id) => {\n    const newTasks = [...tasks].filter((task) => task.id !== id);\n\n    setTask(newTasks);\n  };\n\n  const toggleComplete = (id) => {\n    const updateTasks = [...tasks].map((task) => {\n      // eslint-disable-next-line no-param-reassign\n      if (task.id === id) task.completed = !task.completed;\n\n      return task;\n    });\n\n    setTask(updateTasks);\n  };\n\n  const togglePendente = (id) => {\n    const updateTasks = [...tasks].map((task) => {\n      // eslint-disable-next-line no-param-reassign\n      if (task.id === id) task.pendente = !task.pendente;\n\n      return task;\n    });\n\n    setTask(updateTasks);\n  };\n\n  const editTask = (id) => {\n    const updateTasks = [...tasks].map((task) => {\n      if (task.id === id) {\n        if (!editingText) {\n          return task;\n        }\n        // eslint-disable-next-line no-param-reassign\n        task.description = editingText;\n      }\n\n      return task;\n    });\n\n    setTask(updateTasks);\n    setTaskEditing(null);\n    setEditingText('');\n  };\n\n  useEffect(() => {\n    const loadedTasks = loadTasks();\n\n    setTask(loadedTasks);\n  }, []);\n\n  useEffect(() => {\n    if (tasks) {\n      saveTask(tasks);\n    }\n  }, [tasks]);\n\n  return (\n    <TaskContext.Provider\n      value={{\n        tasks,\n        addTask,\n        removeTask,\n        toggleComplete,\n        togglePendente,\n        handleSubmit,\n        taskEditing,\n        setTaskEditing,\n        editingText,\n        setEditingText,\n        editTask,\n        field,\n        setField,\n        fieldPriority,\n        setFieldPriority,\n        handleOrder,\n      }}\n    >\n      {children}\n    </TaskContext.Provider>\n  );\n}\n\nTaskProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default TaskProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/MyApp';\nimport Provider from './context/Provider'\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}